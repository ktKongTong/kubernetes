name: build dra test-driver image

on:
  workflow_dispatch:
    inputs:
      image: # optional
        type: string
        description: 'Image name'
        required: false
        default: 'test-driver'
      tag:
        type: string
        description: 'Tag to build'
        required: false
        default: 'latest'
  push:
    branches:
#      - master
      - release-1.26
  pull_request:
    branches:
      - master

# permissions:
#   contents: read

jobs:
  docker:
    name: build dra test-driver image
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        docker_version: ["20.10"]
        docker_channel: ["stable"]
    env:
      JOB_NAME: "docker-${{ matrix.docker_version }}-${{ matrix.docker_channel }}"
      TEST_DRIVER_IMAGE: test-driver
      TEST_DRIVER_TAG: latest
#      TEST_DRIVER_IMAGE: ${{ github.event.inputs.image }}
#      TEST_DRIVER_TAG: ${{ github.event.inputs.tag }}
#       IP_FAMILY: ${{ matrix.ipFamily }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: 'release-1.26'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Go Env
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.3'
          cache: true
          cache-dependency-path: go.sum
      - name: Check go env
        run: go version
      - name: Install go pkg
        run: |
          pwd
          ls -l
          env
          echo $GOROOT
          echo $GOPATH
          sh -c "go mod vendor"
      - name: Build test-driver
        run: |
          mkdir -p tmp
          cd test/e2e/dra/test-driver
          go build
          cp test-driver ../../../../tmp
      - name: Add Dockerfile
        run: |
          cd $GITHUB_WORKSPACE
          cat > tmp/Dockerfile <<EOF
          ARG TARGET=controller
          FROM ubuntu:20.04
          COPY test-driver /usr/local/bin/test-driver
          RUN chmod +x /usr/local/bin/test-driver
          ENTRYPOINT ["test-driver", "--feature-gates", "ContextualLogging=true","-v=6","${TARGET}"]
          EOF
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: tmp
          file: tmp/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/${{ env.TEST_DRIVER_IMAGE }}-controller:${{ env.TEST_DRIVER_TAG }}
          target: controller
          build-args: |
            TARGET=controller
          platforms: linux/amd64
      - name: Build and push plugin
        uses: docker/build-push-action@v2
        with:
          context: tmp
          file: tmp/Dockerfile
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/${{ env.TEST_DRIVER_IMAGE }}-plugin:${{ env.TEST_DRIVER_TAG }}
          build-args: |
            TARGET=kubelet-plugin
          platforms: linux/amd64
